#!/bin/bash
#
# snappify snapshot management suite
# github.com/mattferris/snappify
#
# Copyright (c) 2018 Matt Ferris
# Released under the BSD 2-clause license
# github.com/mattferris/snappify/blob/master/LICENSE.txt

# the location of the snap repo
root=".snappify"

# update the location of the snap repo if it was included in the environment
if [ ! -z "$SNAPPIFY_ROOT" ]; then
    root=$SNAPPIFY_ROOT
fi

# report an error
function err {
    echo "error: $2" >&2
    exit $1
}

# report a notice
function notice {
    echo "notice: $1" >&2
}

# generate a checksum for a string
function strsum {
    echo -n "$1" | sha1sum | cut -d\  -f1
}

# generate a checksum for a file
function filesum {
    sha1sum $1 | cut -d\  -f1
}

# convert a relative path to an absolute one
function abspath {
    $(dirname "$root")/$1
}

# return the prefix of a hash
function prefix {
    echo -n "$1" | cut -b-2
}

# return the suffix of a hash
function suffix {
    echo -n "$1" | cut -b3-
}

# read an object from the repo
function robj {
    hash=$1
    prefix=$(prefix "$hash")
    suffix=$(suffix "$hash")
    path="$root/objects/$prefix/$suffix"

    # check that object exists in repo
    if [ ! -f "$path" ]; then
        err 2 "object doesn't exist: $path"
    fi

    cat "$path"
}

# determine relative path length
realbase=$(dirname $(realpath "$root"))
baselen=$(echo -n "$realbase/ " | wc -c)

# collect arguments
hash=$1

# make sure we have everything we need
if [ -z "$hash" ]; then
    echo "usage: $(basename $0) <hash>"
    exit 1
fi

robj "$hash"
