#!/bin/bash
#
# snappify snapshot management suite
# github.com/mattferris/snappify
#
# Copyright (c) 2018 Matt Ferris
# Released under the BSD 2-clause license
# github.com/mattferris/snappify/blob/master/LICENSE.txt

# exit on error
set -e

# the location of the snap repo
root=".snappify"

# update the location of the snap repo if it was included in the environment
if [ ! -z "$SNAPPIFY_ROOT" ]; then
    root=$SNAPPIFY_ROOT
fi

# report an error
function err {
    echo "error: $2" >&2
    exit $1
}

# report a notice
function notice {
    echo "notice: $1" >&2
}

# get meta field
function metafld {
    echo "$2" | cut -d\  -f${1}
}

# get relative path
function relpath {
    echo $1 | cut -b${baselen}-
}

# set mode and ownership
function setmog {
    name=$1
    meta=$2
    mode=$(metafld 2 "$meta")
    group=$(metafld 3 "$meta")
    owner=$(metafld 4 "$meta")
    chmod "$mode" "$name"
    chown "$owner" "$name"
    chgrp "$group" "$name"
}

# restore a directory
function dodir {
    hash=$1
    name=$2
    meta=$3

    # create directory if it doesn't exist
    if [ ! -d "$name" ]; then
        mkdir "$name"
    fi

    # set mode and ownership
    setmog "$name" "$meta"

    # step into directory
    cd "$name"

    blobhash=$(metafld 5 "$meta")
    snappify-read "$blobhash" | { \
    while read i; do
        iname=$(echo "$i" | cut -d\  -f1)
        ihash=$(echo "$i" | cut -d\  -f2)
        imeta=$(snappify-read "$ihash")
        itype=$(metafld 1 "$imeta")

        case $itype in
            d) dodir "$ihash" "$iname" "$imeta" ;;
            f) dofile "$ihash" "$iname" "$imeta" ;;
            l) dolink "$ihash" "$iname" "$imeta" ;;
            *) err 2 "unknown metadata type '$itype'" ;;
        esac
    done
    }

    # change back to parent directory
    if [ ! -z "$(relpath "$PWD")" ]; then
        cd ..
    fi
}

# restore a symlink
function dolink {
    hash=$1
    name=$2
    meta=$3

    blobhash=$(metafld 5 "$meta")
    target=$(snappify-read "$blobhash")

    # create link if it doesn't exist
    if [ ! -h "$name" ]; then
        ln -s "$target" "$name"
    fi

    # set mode and ownership
    setmog "$name" "$meta"
}

# restore a file
function dofile {
    hash=$1
    name=$2
    meta=$3

    blobhash=$(metafld 5 "$meta")
    snappify-read "$blobhash" > "$name"

    # set mode and ownership
    setmog "$name" "$meta"
}

# determine relative path length
realbase=$(dirname $(realpath "$root"))
baselen=$(echo -n "$realbase/ " | wc -c)

# collect arguments
hash=$1
path=$2

# make sure we have everything we need
if [ -z "$hash" ]; then
    echo "usage: $(basename $0) <hash> [ <path> ... ]"
    exit 1
fi

snapmeta=$(snappify-read "$hash" | head -n1)
roothash=$(metafld 3 "$snapmeta")
rootmeta=$(snappify-read "$roothash")

dodir "$roothash" "." "$rootmeta"
